{
  "contractName": "VaultFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToContractMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createNewVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "checkIfAcountHasVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountToContractMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkIfAcountHasVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol\":{\"keccak256\":\"0xdf55cfcbc092225e783274f80868dde58098f5f183ee5b246560cfc0ebe36a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://930ef8fad757ce8dd1f062e84139ec8474b7d0412e3c7e577f2c8370dbc9eead\",\"dweb:/ipfs/QmWeuLfANW8J3LhqFYixwhSDESraxvSeSLukEFsCYVcp4Q\"]},\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":{\"keccak256\":\"0x912bce90d4fdcd6136d88062a6a30dd925eec0df5a5914152c3b0014d20eb577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73d4ac3c0d91a09a1f512d7eb4768cc2185d5b58c0a8413076940fd74be2f336\",\"dweb:/ipfs/QmXLkFTZ5begb1AEQVnsjmAnzxhAGtvvm22FkbJF6AEdRK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806332a2c5d014610051578063889352c21461006f5780638b2d1dbe1461008d5780639d3b8cba14610097575b600080fd5b6100596100c7565b6040516100669190610320565b60405180910390f35b61007761012d565b604051610084919061033b565b60405180910390f35b6100956101d2565b005b6100b160048036038101906100ac91906102d9565b610284565b6040516100be9190610320565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101ca57600090506101cf565b600190505b90565b336040516101df906102b7565b6101e99190610320565b604051809103906000f080158015610205573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612091806103ac83390190565b6000813590506102d381610394565b92915050565b6000602082840312156102eb57600080fd5b60006102f9848285016102c4565b91505092915050565b61030b81610356565b82525050565b61031a81610368565b82525050565b60006020820190506103356000830184610302565b92915050565b60006020820190506103506000830184610311565b92915050565b600061036182610374565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61039d81610356565b81146103a857600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002091380380620020918339818101604052810190620000379190620000c8565b6301e1338042620000499190620000f4565b6004819055506000600560006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001d8565b600081519050620000c281620001be565b92915050565b600060208284031215620000db57600080fd5b6000620000eb84828501620000b1565b91505092915050565b6000620001018262000185565b91506200010e8362000185565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200014657620001456200018f565b5b828201905092915050565b60006200015e8262000165565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b620001c98162000151565b8114620001d557600080fd5b50565b611ea980620001e86000396000f3fe6080604052600436106100e15760003560e01c806379cd9a311161007f5780638f32d59b116100595780638f32d59b1461032c578063a63c496714610357578063b1e2ccd414610380578063e4fdcfe91461039c57610168565b806379cd9a31146102ab5780637b70209f146102d65780637e6d0fa01461030157610168565b806355e5b3ed116100bb57806355e5b3ed146101ef5780636e6addd41461022c5780636f9fb98a14610255578063715875d81461028057610168565b80632383ff811461016d57806335fe629b1461018957806349578fcf146101c657610168565b36610168576100ee6103a6565b61012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012490611a88565b60405180910390fd5b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c333460405161015e929190611984565b60405180910390a1005b600080fd5b61018760048036038101906101829190611413565b6103e3565b005b34801561019557600080fd5b506101b060048036038101906101ab91906114bb565b6104a0565b6040516101bd9190611969565b60405180910390f35b3480156101d257600080fd5b506101ed60048036038101906101e891906113ea565b610519565b005b3480156101fb57600080fd5b50610216600480360381019061021191906113ea565b610638565b6040516102239190611b08565b60405180910390f35b34801561023857600080fd5b50610253600480360381019061024e91906114bb565b610818565b005b34801561026157600080fd5b5061026a6108d2565b6040516102779190611b2a565b60405180910390f35b34801561028c57600080fd5b50610295610933565b6040516102a29190611b2a565b60405180910390f35b3480156102b757600080fd5b506102c0610996565b6040516102cd9190611b2a565b60405180910390f35b3480156102e257600080fd5b506102eb6109ee565b6040516102f891906119ad565b60405180910390f35b34801561030d57600080fd5b506103166109fe565b60405161032391906119ad565b60405180910390f35b34801561033857600080fd5b506103416103a6565b60405161034e91906119ad565b60405180910390f35b34801561036357600080fd5b5061037e6004803603810190610379919061143c565b610a74565b005b61039a600480360381019061039591906114bb565b610bd8565b005b6103a4610c4b565b005b60003373ffffffffffffffffffffffffffffffffffffffff166103c7610d88565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b806103ed81610db1565b61042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042390611ac8565b60405180910390fd5b6104346109fe565b610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90611ae8565b60405180910390fd5b61049c348373ffffffffffffffffffffffffffffffffffffffff16610dce90919063ffffffff16565b5050565b60006104aa6103a6565b6104e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e090611a88565b60405180910390fd5b6104f36001610ec2565b82106104fe57600080fd5b610512826001610ed790919063ffffffff16565b9050919050565b8061052381610db1565b610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990611ac8565b60405180910390fd5b61056a6103a6565b6105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a090611a88565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006105f9919061123d565b600182016000610609919061123d565b6002820160006101000a81549060ff02191690555050610633826001610ef190919063ffffffff16565b505050565b61064061127d565b61064982610db1565b610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90611ac8565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546106e290611d5e565b80601f016020809104026020016040519081016040528092919081815260200182805461070e90611d5e565b801561075b5780601f106107305761010080835404028352916020019161075b565b820191906000526020600020905b81548152906001019060200180831161073e57829003601f168201915b5050505050815260200160018201805461077490611d5e565b80601f01602080910402602001604051908101604052809291908181526020018280546107a090611d5e565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050919050565b6108206103a6565b61085f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085690611a88565b60405180910390fd5b600781118015610870575061016d81105b6108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a6906119e8565b60405180910390fd5b62015180816108be9190611c34565b426108c99190611bde565b60048190555050565b6000336108dd6103a6565b806108ed57506108ec81610db1565b5b61092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390611a08565b60405180910390fd5b4791505090565b60003361093e6103a6565b8061094e575061094d81610db1565b5b61098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098490611a08565b60405180910390fd5b60045491505090565b60006109a06103a6565b6109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d690611a88565b60405180910390fd5b6109e96001610ec2565b905090565b60006109f933610db1565b905090565b600033610a096103a6565b80610a195750610a1881610db1565b5b610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f90611a08565b60405180910390fd5b600454421115610a6b5760019150610a70565b600091505b5090565b610a7c6103a6565b610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290611a88565b60405180910390fd5b610ac483610db1565b15610b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afb90611aa8565b60405180910390fd5b604051806060016040528083815260200182815260200160001515815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610b7d9291906112a0565b506020820151816001019080519060200190610b9a9291906112a0565b5060408201518160020160006101000a81548160ff021916908315150217905550905050610bd2836001610f2190919063ffffffff16565b50505050565b610be06103a6565b610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1690611a88565b60405180910390fd5b610c48813373ffffffffffffffffffffffffffffffffffffffff16610dce90919063ffffffff16565b50565b33610c5581610db1565b610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611ac8565b60405180910390fd5b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16151514610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2190611a28565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff02191690831515021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610dc7826001610f5190919063ffffffff16565b9050919050565b80471015610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0890611a68565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610e3790611954565b60006040518083038185875af1925050503d8060008114610e74576040519150601f19603f3d011682016040523d82523d6000602084013e610e79565b606091505b5050905080610ebd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb490611a48565b60405180910390fd5b505050565b6000610ed082600001610f81565b9050919050565b6000610ee68360000183610f92565b60001c905092915050565b6000610f19836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61102c565b905092915050565b6000610f49836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6111aa565b905092915050565b6000610f79836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61121a565b905092915050565b600081600001805490509050919050565b600081836000018054905011610fdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd4906119c8565b60405180910390fd5b826000018281548110611019577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b6000808360010160008481526020019081526020016000205490506000811461119e57600060018261105e9190611c8e565b90506000600186600001805490506110769190611c8e565b905060008660000182815481106110b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611100577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550838760010160008381526020019081526020016000208190555086600001805480611162577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506111a4565b60009150505b92915050565b60006111b6838361121a565b61120f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611214565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b50805461124990611d5e565b6000825580601f1061125b575061127a565b601f0160209004906000526020600020908101906112799190611326565b5b50565b604051806060016040528060608152602001606081526020016000151581525090565b8280546112ac90611d5e565b90600052602060002090601f0160209004810192826112ce5760008555611315565b82601f106112e757805160ff1916838001178555611315565b82800160010185558215611315579182015b828111156113145782518255916020019190600101906112f9565b5b5090506113229190611326565b5090565b5b8082111561133f576000816000905550600101611327565b5090565b600061135661135184611b76565b611b45565b90508281526020810184848401111561136e57600080fd5b611379848285611d1c565b509392505050565b60008135905061139081611e2e565b92915050565b6000813590506113a581611e45565b92915050565b600082601f8301126113bc57600080fd5b81356113cc848260208601611343565b91505092915050565b6000813590506113e481611e5c565b92915050565b6000602082840312156113fc57600080fd5b600061140a84828501611381565b91505092915050565b60006020828403121561142557600080fd5b600061143384828501611396565b91505092915050565b60008060006060848603121561145157600080fd5b600061145f86828701611381565b935050602084013567ffffffffffffffff81111561147c57600080fd5b611488868287016113ab565b925050604084013567ffffffffffffffff8111156114a557600080fd5b6114b1868287016113ab565b9150509250925092565b6000602082840312156114cd57600080fd5b60006114db848285016113d5565b91505092915050565b6114ed81611cc2565b82525050565b6114fc81611ce6565b82525050565b61150b81611ce6565b82525050565b600061151c82611ba6565b6115268185611bbc565b9350611536818560208601611d2b565b61153f81611e1d565b840191505092915050565b6000611557602283611bcd565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006115bd604883611bcd565b91507f657874656e73696f6e20697320736574206f6e6c7920696e206461797320746860008301527f6174206172652067726561746572207468656e203720616e64206c6f7765722060208301527f7468656e203336350000000000000000000000000000000000000000000000006040830152606082019050919050565b6000611649602383611bcd565b91507f61646472657373206973206e6f74206f776e6572206f722062656e656669636960008301527f61727900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006116af601d83611bcd565b91507f74686973206164647265737320616c72656164792076657269666965640000006000830152602082019050919050565b60006116ef603a83611bcd565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b6000611755601d83611bcd565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b6000611795602083611bcd565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006117d5600083611bb1565b9150600082019050919050565b60006117ef602683611bcd565b91507f62656e65666963696172792061646472657373206e6f7420616c72656164792060008301527f65786973742100000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611855601e83611bcd565b91507f62656e65666963696172792061646472657373206e6f7420666f756e642100006000830152602082019050919050565b6000611895602583611bcd565b91507f7769746864726177206973206e6f7420616c6c6f77656420617420746865206d60008301527f6f6d656e740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000606083016000830151848203600086015261190b8282611511565b915050602083015184820360208601526119258282611511565b915050604083015161193a60408601826114f3565b508091505092915050565b61194e81611d12565b82525050565b600061195f826117c8565b9150819050919050565b600060208201905061197e60008301846114e4565b92915050565b600060408201905061199960008301856114e4565b6119a66020830184611945565b9392505050565b60006020820190506119c26000830184611502565b92915050565b600060208201905081810360008301526119e18161154a565b9050919050565b60006020820190508181036000830152611a01816115b0565b9050919050565b60006020820190508181036000830152611a218161163c565b9050919050565b60006020820190508181036000830152611a41816116a2565b9050919050565b60006020820190508181036000830152611a61816116e2565b9050919050565b60006020820190508181036000830152611a8181611748565b9050919050565b60006020820190508181036000830152611aa181611788565b9050919050565b60006020820190508181036000830152611ac1816117e2565b9050919050565b60006020820190508181036000830152611ae181611848565b9050919050565b60006020820190508181036000830152611b0181611888565b9050919050565b60006020820190508181036000830152611b2281846118ee565b905092915050565b6000602082019050611b3f6000830184611945565b92915050565b6000604051905081810181811067ffffffffffffffff82111715611b6c57611b6b611dee565b5b8060405250919050565b600067ffffffffffffffff821115611b9157611b90611dee565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611be982611d12565b9150611bf483611d12565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c2957611c28611d90565b5b828201905092915050565b6000611c3f82611d12565b9150611c4a83611d12565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c8357611c82611d90565b5b828202905092915050565b6000611c9982611d12565b9150611ca483611d12565b925082821015611cb757611cb6611d90565b5b828203905092915050565b6000611ccd82611cf2565b9050919050565b6000611cdf82611cf2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611d49578082015181840152602081019050611d2e565b83811115611d58576000848401525b50505050565b60006002820490506001821680611d7657607f821691505b60208210811415611d8a57611d89611dbf565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611e3781611cc2565b8114611e4257600080fd5b50565b611e4e81611cd4565b8114611e5957600080fd5b50565b611e6581611d12565b8114611e7057600080fd5b5056fea2646970667358221220179aee9624f9ee139a3179d564054ea0fc32c3ba534a11a2492500d573fa322564736f6c63430008000033a264697066735822122032482c62ba978ec0cf196b2fb6568891c4739fd48bde567b6f7f58cf857f1e6964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1558:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:4",
                "type": ""
              }
            ],
            "src": "152:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:4",
                "type": ""
              }
            ],
            "src": "420:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:4",
                "type": ""
              }
            ],
            "src": "544:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "860:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "871:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:4",
                "type": ""
              }
            ],
            "src": "659:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "989:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1001:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "997:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "989:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1025:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "951:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "974:4:4",
                "type": ""
              }
            ],
            "src": "887:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1169:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1158:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1130:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1140:7:4",
                "type": ""
              }
            ],
            "src": "1103:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:4",
                "type": ""
              }
            ],
            "src": "1205:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1371:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1367:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1356:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1328:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1338:7:4",
                "type": ""
              }
            ],
            "src": "1301:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1533:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1535:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1535:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1535:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1499:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1524:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1506:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1506:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:4",
                "type": ""
              }
            ],
            "src": "1433:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:227;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:130;;;:::i;:::-;;159:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:119;420:7;445:24;:36;470:10;445:36;;;;;;;;;;;;;;;;;;;;;;;;;438:43;;369:119;:::o;503:227::-;557:4;624:1;576:50;;:24;:36;601:10;576:36;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;573:91;;;648:5;641:12;;;;573:91;719:4;712:11;;503:227;;:::o;229:130::-;340:10;317:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;270:24;:36;295:10;270:36;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;229:130::o;159:59::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:222::-;;790:2;779:9;775:18;767:26;;803:71;871:1;860:9;856:17;847:6;803:71;:::i;:::-;757:124;;;;:::o;887:210::-;;1012:2;1001:9;997:18;989:26;;1025:65;1087:1;1076:9;1072:17;1063:6;1025:65;:::i;:::-;979:118;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:122::-;1506:24;1524:5;1506:24;:::i;:::-;1499:5;1496:35;1486:2;;1545:1;1542;1535:12;1486:2;1476:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BeneficiariesVault.sol\";\n\ncontract VaultFactory {\n    \n    \n    //map address to struct\n    mapping(address => address) public accountToContractMapping;\n    \n    function createNewVault() public {\n      accountToContractMapping[msg.sender] = address(new BeneficiariesVault(msg.sender));\n    }\n    \n    function getContractAddress() public view returns (address){\n        return accountToContractMapping[msg.sender];\n    }\n    \n    \n    function checkIfAcountHasVault() public view returns (bool) {\n        if(accountToContractMapping[msg.sender] == address(0)){\n            return false;\n        }\n        //msg.sender is in the mapping\n        return true;\n    }\n}",
  "sourcePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
  "ast": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        769
      ],
      "BeneficiariesVault": [
        414
      ],
      "EnumerableSet": [
        1282
      ],
      "VaultFactory": [
        473
      ]
    },
    "id": 474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 416,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 417,
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 415,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          414
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 473,
        "linearizedBaseContracts": [
          473
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 421,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 420,
              "keyType": {
                "id": 418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 419,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 424,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 427,
                      "indexExpression": {
                        "expression": {
                          "id": 425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 433,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$414_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 431,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 430,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 414,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 414,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 473,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 445,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 448,
                    "indexExpression": {
                      "expression": {
                        "id": 446,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 444,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 473,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 456,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "expression": {
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 468,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 455,
                        "id": 466,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 455,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 473,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 474,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "legacyAST": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        769
      ],
      "BeneficiariesVault": [
        414
      ],
      "EnumerableSet": [
        1282
      ],
      "VaultFactory": [
        473
      ]
    },
    "id": 474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 416,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 417,
        "nodeType": "ImportDirective",
        "scope": 474,
        "sourceUnit": 415,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          414
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 473,
        "linearizedBaseContracts": [
          473
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 421,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 420,
              "keyType": {
                "id": 418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 419,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 424,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 427,
                      "indexExpression": {
                        "expression": {
                          "id": 425,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 433,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$414_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 431,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 430,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 414,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 414,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$414",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 473,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 450,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 445,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 448,
                    "indexExpression": {
                      "expression": {
                        "id": 446,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 444,
                  "id": 449,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 443,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 451,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 473,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 456,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 459,
                      "indexExpression": {
                        "expression": {
                          "id": 457,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 468,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 455,
                        "id": 466,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 455,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 473,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 474,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x74eEF0b1f32A42B195C74F95BfF9a641a88Fcdae",
      "transactionHash": "0xa274977b3804dcb2d5108cb48ae899261946c0172e61430c9f2094b5f9bff530"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-07T20:45:48.766Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}