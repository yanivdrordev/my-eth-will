{
  "contractName": "VaultFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToContractMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createNewVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "checkIfAcountHasVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountToContractMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkIfAcountHasVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol\":{\"keccak256\":\"0xde66be25fd6c8e0acad8a3d7bd2c00d44ab1fea0a3ec402e4fa68d962bb4595a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a16604225d6b9316a2664ada0e443b86cfd53f25e9ad61f313800cd4c36d2a6b\",\"dweb:/ipfs/QmPuk2AnSycDfbSdUp45J4viGNGtcvoyvaraHiAejQhggC\"]},\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":{\"keccak256\":\"0x912bce90d4fdcd6136d88062a6a30dd925eec0df5a5914152c3b0014d20eb577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73d4ac3c0d91a09a1f512d7eb4768cc2185d5b58c0a8413076940fd74be2f336\",\"dweb:/ipfs/QmXLkFTZ5begb1AEQVnsjmAnzxhAGtvvm22FkbJF6AEdRK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806332a2c5d014610051578063889352c21461006f5780638b2d1dbe1461008d5780639d3b8cba14610097575b600080fd5b6100596100c7565b6040516100669190610320565b60405180910390f35b61007761012d565b604051610084919061033b565b60405180910390f35b6100956101d2565b005b6100b160048036038101906100ac91906102d9565b610284565b6040516100be9190610320565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101ca57600090506101cf565b600190505b90565b336040516101df906102b7565b6101e99190610320565b604051809103906000f080158015610205573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611e4c806103ac83390190565b6000813590506102d381610394565b92915050565b6000602082840312156102eb57600080fd5b60006102f9848285016102c4565b91505092915050565b61030b81610356565b82525050565b61031a81610368565b82525050565b60006020820190506103356000830184610302565b92915050565b60006020820190506103506000830184610311565b92915050565b600061036182610374565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61039d81610356565b81146103a857600080fd5b5056fe60806040523480156200001157600080fd5b5060405162001e4c38038062001e4c8339818101604052810190620000379190620000c8565b6301e1338042620000499190620000f4565b6004819055506000600560006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001d8565b600081519050620000c281620001be565b92915050565b600060208284031215620000db57600080fd5b6000620000eb84828501620000b1565b91505092915050565b6000620001018262000185565b91506200010e8362000185565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200014657620001456200018f565b5b828201905092915050565b60006200015e8262000165565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b620001c98162000151565b8114620001d557600080fd5b50565b611c6480620001e86000396000f3fe6080604052600436106100c65760003560e01c8063715875d81161007f5780637e6d0fa0116100595780637e6d0fa0146102e65780638f32d59b14610311578063a63c49671461033c578063b1e2ccd4146103655761014d565b8063715875d81461026557806379cd9a31146102905780637b70209f146102bb5761014d565b80632383ff811461015257806335fe629b1461016e57806349578fcf146101ab57806355e5b3ed146101d45780636e6addd4146102115780636f9fb98a1461023a5761014d565b3661014d576100d3610381565b610112576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010990611843565b60405180910390fd5b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c333460405161014392919061175f565b60405180910390a1005b600080fd5b61016c60048036038101906101679190611250565b6103be565b005b34801561017a57600080fd5b50610195600480360381019061019091906112f8565b61047b565b6040516101a29190611744565b60405180910390f35b3480156101b757600080fd5b506101d260048036038101906101cd9190611227565b6104f4565b005b3480156101e057600080fd5b506101fb60048036038101906101f69190611227565b6105ff565b60405161020891906118c3565b60405180910390f35b34801561021d57600080fd5b50610238600480360381019061023391906112f8565b6107c4565b005b34801561024657600080fd5b5061024f61087e565b60405161025c91906118e5565b60405180910390f35b34801561027157600080fd5b5061027a6108df565b60405161028791906118e5565b60405180910390f35b34801561029c57600080fd5b506102a5610942565b6040516102b291906118e5565b60405180910390f35b3480156102c757600080fd5b506102d061099a565b6040516102dd9190611788565b60405180910390f35b3480156102f257600080fd5b506102fb6109aa565b6040516103089190611788565b60405180910390f35b34801561031d57600080fd5b50610326610381565b6040516103339190611788565b60405180910390f35b34801561034857600080fd5b50610363600480360381019061035e9190611279565b610a20565b005b61037f600480360381019061037a91906112f8565b610b5b565b005b60003373ffffffffffffffffffffffffffffffffffffffff166103a2610bce565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b806103c881610bf7565b610407576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fe90611883565b60405180910390fd5b61040f6109aa565b61044e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610445906118a3565b60405180910390fd5b610477348373ffffffffffffffffffffffffffffffffffffffff16610c1490919063ffffffff16565b5050565b6000610485610381565b6104c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bb90611843565b60405180910390fd5b6104ce6001610d08565b82106104d957600080fd5b6104ed826001610d1d90919063ffffffff16565b9050919050565b806104fe81610bf7565b61053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490611883565b60405180910390fd5b610545610381565b610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057b90611843565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006105d49190611083565b6001820160006105e49190611083565b50506105fa826001610d3790919063ffffffff16565b505050565b6106076110c3565b61061082610bf7565b61064f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064690611883565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546106a990611b19565b80601f01602080910402602001604051908101604052809291908181526020018280546106d590611b19565b80156107225780601f106106f757610100808354040283529160200191610722565b820191906000526020600020905b81548152906001019060200180831161070557829003601f168201915b5050505050815260200160018201805461073b90611b19565b80601f016020809104026020016040519081016040528092919081815260200182805461076790611b19565b80156107b45780601f10610789576101008083540402835291602001916107b4565b820191906000526020600020905b81548152906001019060200180831161079757829003601f168201915b5050505050815250509050919050565b6107cc610381565b61080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290611843565b60405180910390fd5b60078111801561081c575061016d81105b61085b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610852906117c3565b60405180910390fd5b620151808161086a91906119ef565b426108759190611999565b60048190555050565b600033610889610381565b80610899575061089881610bf7565b5b6108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf906117e3565b60405180910390fd5b4791505090565b6000336108ea610381565b806108fa57506108f981610bf7565b5b610939576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610930906117e3565b60405180910390fd5b60045491505090565b600061094c610381565b61098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098290611843565b60405180910390fd5b6109956001610d08565b905090565b60006109a533610bf7565b905090565b6000336109b5610381565b806109c557506109c481610bf7565b5b610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb906117e3565b60405180910390fd5b600454421115610a175760019150610a1c565b600091505b5090565b610a28610381565b610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5e90611843565b60405180910390fd5b610a7083610bf7565b15610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611863565b60405180910390fd5b604051806040016040528083815260200182815250600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610b209291906110dd565b506020820151816001019080519060200190610b3d9291906110dd565b50905050610b55836001610d6790919063ffffffff16565b50505050565b610b63610381565b610ba2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9990611843565b60405180910390fd5b610bcb813373ffffffffffffffffffffffffffffffffffffffff16610c1490919063ffffffff16565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610c0d826001610d9790919063ffffffff16565b9050919050565b80471015610c57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4e90611823565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610c7d9061172f565b60006040518083038185875af1925050503d8060008114610cba576040519150601f19603f3d011682016040523d82523d6000602084013e610cbf565b606091505b5050905080610d03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfa90611803565b60405180910390fd5b505050565b6000610d1682600001610dc7565b9050919050565b6000610d2c8360000183610dd8565b60001c905092915050565b6000610d5f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610e72565b905092915050565b6000610d8f836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610ff0565b905092915050565b6000610dbf836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611060565b905092915050565b600081600001805490509050919050565b600081836000018054905011610e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1a906117a3565b60405180910390fd5b826000018281548110610e5f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b60008083600101600084815260200190815260200160002054905060008114610fe4576000600182610ea49190611a49565b9050600060018660000180549050610ebc9190611a49565b90506000866000018281548110610efc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110610f46577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550838760010160008381526020019081526020016000208190555086600001805480610fa8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610fea565b60009150505b92915050565b6000610ffc8383611060565b61105557826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905061105a565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b50805461108f90611b19565b6000825580601f106110a157506110c0565b601f0160209004906000526020600020908101906110bf9190611163565b5b50565b604051806040016040528060608152602001606081525090565b8280546110e990611b19565b90600052602060002090601f01602090048101928261110b5760008555611152565b82601f1061112457805160ff1916838001178555611152565b82800160010185558215611152579182015b82811115611151578251825591602001919060010190611136565b5b50905061115f9190611163565b5090565b5b8082111561117c576000816000905550600101611164565b5090565b600061119361118e84611931565b611900565b9050828152602081018484840111156111ab57600080fd5b6111b6848285611ad7565b509392505050565b6000813590506111cd81611be9565b92915050565b6000813590506111e281611c00565b92915050565b600082601f8301126111f957600080fd5b8135611209848260208601611180565b91505092915050565b60008135905061122181611c17565b92915050565b60006020828403121561123957600080fd5b6000611247848285016111be565b91505092915050565b60006020828403121561126257600080fd5b6000611270848285016111d3565b91505092915050565b60008060006060848603121561128e57600080fd5b600061129c868287016111be565b935050602084013567ffffffffffffffff8111156112b957600080fd5b6112c5868287016111e8565b925050604084013567ffffffffffffffff8111156112e257600080fd5b6112ee868287016111e8565b9150509250925092565b60006020828403121561130a57600080fd5b600061131884828501611212565b91505092915050565b61132a81611a7d565b82525050565b61133981611aa1565b82525050565b600061134a82611961565b6113548185611977565b9350611364818560208601611ae6565b61136d81611bd8565b840191505092915050565b6000611385602283611988565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006113eb604883611988565b91507f657874656e73696f6e20697320736574206f6e6c7920696e206461797320746860008301527f6174206172652067726561746572207468656e203720616e64206c6f7765722060208301527f7468656e203336350000000000000000000000000000000000000000000000006040830152606082019050919050565b6000611477602383611988565b91507f61646472657373206973206e6f74206f776e6572206f722062656e656669636960008301527f61727900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006114dd603a83611988565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b6000611543601d83611988565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b6000611583602083611988565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006115c360008361196c565b9150600082019050919050565b60006115dd602683611988565b91507f62656e65666963696172792061646472657373206e6f7420616c72656164792060008301527f65786973742100000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611643601e83611988565b91507f62656e65666963696172792061646472657373206e6f7420666f756e642100006000830152602082019050919050565b6000611683602583611988565b91507f7769746864726177206973206e6f7420616c6c6f77656420617420746865206d60008301527f6f6d656e740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060408301600083015184820360008601526116f9828261133f565b91505060208301518482036020860152611713828261133f565b9150508091505092915050565b61172981611acd565b82525050565b600061173a826115b6565b9150819050919050565b60006020820190506117596000830184611321565b92915050565b60006040820190506117746000830185611321565b6117816020830184611720565b9392505050565b600060208201905061179d6000830184611330565b92915050565b600060208201905081810360008301526117bc81611378565b9050919050565b600060208201905081810360008301526117dc816113de565b9050919050565b600060208201905081810360008301526117fc8161146a565b9050919050565b6000602082019050818103600083015261181c816114d0565b9050919050565b6000602082019050818103600083015261183c81611536565b9050919050565b6000602082019050818103600083015261185c81611576565b9050919050565b6000602082019050818103600083015261187c816115d0565b9050919050565b6000602082019050818103600083015261189c81611636565b9050919050565b600060208201905081810360008301526118bc81611676565b9050919050565b600060208201905081810360008301526118dd81846116dc565b905092915050565b60006020820190506118fa6000830184611720565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561192757611926611ba9565b5b8060405250919050565b600067ffffffffffffffff82111561194c5761194b611ba9565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119a482611acd565b91506119af83611acd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119e4576119e3611b4b565b5b828201905092915050565b60006119fa82611acd565b9150611a0583611acd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a3e57611a3d611b4b565b5b828202905092915050565b6000611a5482611acd565b9150611a5f83611acd565b925082821015611a7257611a71611b4b565b5b828203905092915050565b6000611a8882611aad565b9050919050565b6000611a9a82611aad565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611b04578082015181840152602081019050611ae9565b83811115611b13576000848401525b50505050565b60006002820490506001821680611b3157607f821691505b60208210811415611b4557611b44611b7a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611bf281611a7d565b8114611bfd57600080fd5b50565b611c0981611a8f565b8114611c1457600080fd5b50565b611c2081611acd565b8114611c2b57600080fd5b5056fea264697066735822122058fed77ab4927f2d01b098e791b0e2a29b43956d840d06a353fbe231e75a4d9964736f6c63430008000033a26469706673582212205e3c22a35944bafdae1e4b65f273e7dc0babcd3fcec84912f8f7870a0ddd9f3964736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1558:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:4",
                "type": ""
              }
            ],
            "src": "152:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:4",
                "type": ""
              }
            ],
            "src": "420:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:4",
                "type": ""
              }
            ],
            "src": "544:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "860:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "871:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:4",
                "type": ""
              }
            ],
            "src": "659:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "989:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1001:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "997:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "989:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1025:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "951:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "974:4:4",
                "type": ""
              }
            ],
            "src": "887:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1169:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1158:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1130:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1140:7:4",
                "type": ""
              }
            ],
            "src": "1103:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:4",
                "type": ""
              }
            ],
            "src": "1205:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1371:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1367:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1356:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1328:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1338:7:4",
                "type": ""
              }
            ],
            "src": "1301:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1533:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1535:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1535:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1535:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1499:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1524:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1506:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1506:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:4",
                "type": ""
              }
            ],
            "src": "1433:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:227;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:130;;;:::i;:::-;;159:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:119;420:7;445:24;:36;470:10;445:36;;;;;;;;;;;;;;;;;;;;;;;;;438:43;;369:119;:::o;503:227::-;557:4;624:1;576:50;;:24;:36;601:10;576:36;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;573:91;;;648:5;641:12;;;;573:91;719:4;712:11;;503:227;;:::o;229:130::-;340:10;317:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;270:24;:36;295:10;270:36;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;229:130::o;159:59::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:222::-;;790:2;779:9;775:18;767:26;;803:71;871:1;860:9;856:17;847:6;803:71;:::i;:::-;757:124;;;;:::o;887:210::-;;1012:2;1001:9;997:18;989:26;;1025:65;1087:1;1076:9;1072:17;1063:6;1025:65;:::i;:::-;979:118;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:122::-;1506:24;1524:5;1506:24;:::i;:::-;1499:5;1496:35;1486:2;;1545:1;1542;1535:12;1486:2;1476:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BeneficiariesVault.sol\";\n\ncontract VaultFactory {\n    \n    \n    //map address to struct\n    mapping(address => address) public accountToContractMapping;\n    \n    function createNewVault() public {\n      accountToContractMapping[msg.sender] = address(new BeneficiariesVault(msg.sender));\n    }\n    \n    function getContractAddress() public view returns (address){\n        return accountToContractMapping[msg.sender];\n    }\n    \n    \n    function checkIfAcountHasVault() public view returns (bool) {\n        if(accountToContractMapping[msg.sender] == address(0)){\n            return false;\n        }\n        //msg.sender is in the mapping\n        return true;\n    }\n}",
  "sourcePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
  "ast": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        739
      ],
      "BeneficiariesVault": [
        384
      ],
      "EnumerableSet": [
        1252
      ],
      "VaultFactory": [
        443
      ]
    },
    "id": 444,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 386,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 387,
        "nodeType": "ImportDirective",
        "scope": 444,
        "sourceUnit": 385,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          384
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 443,
        "linearizedBaseContracts": [
          443
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 391,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 443,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 390,
              "keyType": {
                "id": 388,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 389,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 394,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 397,
                      "indexExpression": {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 403,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$384_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 401,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 400,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 384,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 384,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 443,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 415,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "expression": {
                        "id": 416,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 414,
                  "id": 419,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 443,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 426,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 429,
                      "indexExpression": {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 438,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 425,
                        "id": 436,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 425,
                  "id": 440,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 443,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 444,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "legacyAST": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        739
      ],
      "BeneficiariesVault": [
        384
      ],
      "EnumerableSet": [
        1252
      ],
      "VaultFactory": [
        443
      ]
    },
    "id": 444,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 386,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 387,
        "nodeType": "ImportDirective",
        "scope": 444,
        "sourceUnit": 385,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          384
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 443,
        "linearizedBaseContracts": [
          443
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 391,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 443,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 390,
              "keyType": {
                "id": 388,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 389,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 394,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 397,
                      "indexExpression": {
                        "expression": {
                          "id": 395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 403,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$384_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 401,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 400,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 384,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 384,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$384",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 443,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 415,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "expression": {
                        "id": 416,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 414,
                  "id": 419,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 443,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 426,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 391,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 429,
                      "indexExpression": {
                        "expression": {
                          "id": 427,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 438,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 425,
                        "id": 436,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 425,
                  "id": 440,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 424,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 443,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 444,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5C90A1B21647530bB17b6D4140eD9daAB4C3b81e",
      "transactionHash": "0xc253091a9009a1921a7f54488f0739a1756e1e46f7fe6f5eb823be867c05c810"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-07T00:39:49.966Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}