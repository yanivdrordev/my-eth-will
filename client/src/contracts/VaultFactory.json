{
  "contractName": "VaultFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToContractMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createNewVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "checkIfAcountHasVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountToContractMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkIfAcountHasVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/BeneficiariesVault.sol\":{\"keccak256\":\"0x9d0107651f4f1633cc695ead26a61edf36601ce7242501d4b778caa9150adb36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f3945bafc9b3e5d9e79e1c7da4d3c1b5c3f282ae8fa227c7050ca0a8bf6e22\",\"dweb:/ipfs/QmVvTpbQNwjBu1nGVF6sWXg5QxUsPsmncDmC2gqS6p1BGx\"]},\"/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/VaultFactory.sol\":{\"keccak256\":\"0x912bce90d4fdcd6136d88062a6a30dd925eec0df5a5914152c3b0014d20eb577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73d4ac3c0d91a09a1f512d7eb4768cc2185d5b58c0a8413076940fd74be2f336\",\"dweb:/ipfs/QmXLkFTZ5begb1AEQVnsjmAnzxhAGtvvm22FkbJF6AEdRK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1558:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:6",
                "type": ""
              }
            ],
            "src": "152:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:6",
                "type": ""
              }
            ],
            "src": "420:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:6",
                "type": ""
              }
            ],
            "src": "544:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "860:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "871:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:6",
                "type": ""
              }
            ],
            "src": "659:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "989:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1001:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "997:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "989:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1025:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "951:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "974:4:6",
                "type": ""
              }
            ],
            "src": "887:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1169:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1158:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1130:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1140:7:6",
                "type": ""
              }
            ],
            "src": "1103:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:6",
                "type": ""
              }
            ],
            "src": "1205:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1371:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1367:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1356:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1328:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1338:7:6",
                "type": ""
              }
            ],
            "src": "1301:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1533:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1535:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1535:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1535:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1499:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1524:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1506:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1506:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:6",
                "type": ""
              }
            ],
            "src": "1433:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:639:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:639:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:227;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:130;;;:::i;:::-;;159:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:119;420:7;445:24;:36;470:10;445:36;;;;;;;;;;;;;;;;;;;;;;;;;438:43;;369:119;:::o;503:227::-;557:4;624:1;576:50;;:24;:36;601:10;576:36;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;573:91;;;648:5;641:12;;;;573:91;719:4;712:11;;503:227;;:::o;229:130::-;340:10;317:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;270:24;:36;295:10;270:36;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;229:130::o;159:59::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:222::-;;790:2;779:9;775:18;767:26;;803:71;871:1;860:9;856:17;847:6;803:71;:::i;:::-;757:124;;;;:::o;887:210::-;;1012:2;1001:9;997:18;989:26;;1025:65;1087:1;1076:9;1072:17;1063:6;1025:65;:::i;:::-;979:118;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:122::-;1506:24;1524:5;1506:24;:::i;:::-;1499:5;1496:35;1486:2;;1545:1;1542;1535:12;1486:2;1476:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BeneficiariesVault.sol\";\n\ncontract VaultFactory {\n    \n    \n    //map address to struct\n    mapping(address => address) public accountToContractMapping;\n    \n    function createNewVault() public {\n      accountToContractMapping[msg.sender] = address(new BeneficiariesVault(msg.sender));\n    }\n    \n    function getContractAddress() public view returns (address){\n        return accountToContractMapping[msg.sender];\n    }\n    \n    \n    function checkIfAcountHasVault() public view returns (bool) {\n        if(accountToContractMapping[msg.sender] == address(0)){\n            return false;\n        }\n        //msg.sender is in the mapping\n        return true;\n    }\n}",
  "sourcePath": "/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/VaultFactory.sol",
  "ast": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        761
      ],
      "BeneficiariesVault": [
        346
      ],
      "EnumerableSet": [
        1274
      ],
      "VaultFactory": [
        465
      ]
    },
    "id": 466,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 408,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 409,
        "nodeType": "ImportDirective",
        "scope": 466,
        "sourceUnit": 347,
        "src": "57:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          346
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 465,
        "linearizedBaseContracts": [
          465
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 413,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 465,
            "src": "159:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 412,
              "keyType": {
                "id": 410,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "262:97:3",
              "statements": [
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 416,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "270:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 419,
                      "indexExpression": {
                        "expression": {
                          "id": 417,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 425,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$346_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 423,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 422,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 346,
                                "src": "321:18:3"
                              },
                              "referencedDeclaration": 346,
                              "src": "321:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:3"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:3"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:3"
            },
            "scope": 465,
            "src": "229:130:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "428:60:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 437,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "445:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 440,
                    "indexExpression": {
                      "expression": {
                        "id": 438,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 436,
                  "id": 441,
                  "nodeType": "Return",
                  "src": "438:43:3"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:3"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "420:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:3"
            },
            "scope": 465,
            "src": "369:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "563:167:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 448,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "576:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 451,
                      "indexExpression": {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 460,
                  "nodeType": "IfStatement",
                  "src": "573:91:3",
                  "trueBody": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "627:37:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 447,
                        "id": 458,
                        "nodeType": "Return",
                        "src": "641:12:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 447,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "712:11:3"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:3"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "557:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:3"
            },
            "scope": 465,
            "src": "503:227:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 466,
        "src": "93:639:3"
      }
    ],
    "src": "32:700:3"
  },
  "legacyAST": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        761
      ],
      "BeneficiariesVault": [
        346
      ],
      "EnumerableSet": [
        1274
      ],
      "VaultFactory": [
        465
      ]
    },
    "id": 466,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 408,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-ethe-vault/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 409,
        "nodeType": "ImportDirective",
        "scope": 466,
        "sourceUnit": 347,
        "src": "57:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          346
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 465,
        "linearizedBaseContracts": [
          465
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 413,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 465,
            "src": "159:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 412,
              "keyType": {
                "id": 410,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "262:97:3",
              "statements": [
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 416,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "270:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 419,
                      "indexExpression": {
                        "expression": {
                          "id": 417,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 425,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$346_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 423,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 422,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 346,
                                "src": "321:18:3"
                              },
                              "referencedDeclaration": 346,
                              "src": "321:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$346",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:3"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:3"
            },
            "returnParameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:3"
            },
            "scope": 465,
            "src": "229:130:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "428:60:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 437,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "445:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 440,
                    "indexExpression": {
                      "expression": {
                        "id": 438,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 436,
                  "id": 441,
                  "nodeType": "Return",
                  "src": "438:43:3"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:3"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "420:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:3"
            },
            "scope": 465,
            "src": "369:119:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 463,
              "nodeType": "Block",
              "src": "563:167:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 448,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "576:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 451,
                      "indexExpression": {
                        "expression": {
                          "id": 449,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 460,
                  "nodeType": "IfStatement",
                  "src": "573:91:3",
                  "trueBody": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "627:37:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 447,
                        "id": 458,
                        "nodeType": "Return",
                        "src": "641:12:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 447,
                  "id": 462,
                  "nodeType": "Return",
                  "src": "712:11:3"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:3"
            },
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 464,
                  "src": "557:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:3"
            },
            "scope": 465,
            "src": "503:227:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 466,
        "src": "93:639:3"
      }
    ],
    "src": "32:700:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4A5FB5d941241E21c6fe7cf67D2fBd6857490ed8",
      "transactionHash": "0x6b34449e19f0d0b886db4342ab20f8cc2dd24ec23d771f564ad08beb32db6499"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-05-30T07:10:46.702Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}