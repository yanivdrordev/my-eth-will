{
  "contractName": "VaultFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accountToContractMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createNewVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "checkIfAcountHasVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accountToContractMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkIfAcountHasVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createNewVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":\"VaultFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol\":{\"keccak256\":\"0x0795e585d78e813fb8e241a2087838a2f5302c6505edf3f616168579f25e5671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcb185e46a937ee5068c004636150027a5a78d64b2e1e6e9834d598933180c9c\",\"dweb:/ipfs/QmbP2rMVeMx6bts45CCCg4bnqwthxMangaxb8kK9gLN7Zt\"]},\"/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol\":{\"keccak256\":\"0x912bce90d4fdcd6136d88062a6a30dd925eec0df5a5914152c3b0014d20eb577\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73d4ac3c0d91a09a1f512d7eb4768cc2185d5b58c0a8413076940fd74be2f336\",\"dweb:/ipfs/QmXLkFTZ5begb1AEQVnsjmAnzxhAGtvvm22FkbJF6AEdRK\"]},\"@openzeppelin/contracts/utils//math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bdcc04ffc6b0a39e76ca4d8c09fb36927c2355008294db28096c1bd9ef544\",\"dweb:/ipfs/QmSNmMUxcuQ9i6U1PVcd14gTCEYmFgkjPg3anzDckGhVRS\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806332a2c5d014610051578063889352c21461006f5780638b2d1dbe1461008d5780639d3b8cba14610097575b600080fd5b6100596100c7565b6040516100669190610320565b60405180910390f35b61007761012d565b604051610084919061033b565b60405180910390f35b6100956101d2565b005b6100b160048036038101906100ac91906102d9565b610284565b6040516100be9190610320565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101ca57600090506101cf565b600190505b90565b336040516101df906102b7565b6101e99190610320565b604051809103906000f080158015610205573d6000803e3d6000fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6128a2806103ac83390190565b6000813590506102d381610394565b92915050565b6000602082840312156102eb57600080fd5b60006102f9848285016102c4565b91505092915050565b61030b81610356565b82525050565b61031a81610368565b82525050565b60006020820190506103356000830184610302565b92915050565b60006020820190506103506000830184610311565b92915050565b600061036182610374565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61039d81610356565b81146103a857600080fd5b5056fe60806040523480156200001157600080fd5b50604051620028a2380380620028a28339818101604052810190620000379190620000d0565b6301e1338042620000499190620000fc565b6005819055506000600660006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555050620001e0565b600081519050620000ca81620001c6565b92915050565b600060208284031215620000e357600080fd5b6000620000f384828501620000b9565b91505092915050565b600062000109826200018d565b915062000116836200018d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200014e576200014d62000197565b5b828201905092915050565b600062000166826200016d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b620001d18162000159565b8114620001dd57600080fd5b50565b6126b280620001f06000396000f3fe6080604052600436106100f75760003560e01c806379cd9a311161008a578063a63c496711610059578063a63c496714610384578063b1e2ccd4146103ad578063e4fdcfe9146103c9578063f6cd8dc1146103d35761017e565b806379cd9a31146102d85780637b70209f146103035780637e6d0fa01461032e5780638f32d59b146103595761017e565b806349578fcf116100c657806349578fcf146102305780636e6addd4146102595780636f9fb98a14610282578063715875d8146102ad5761017e565b80630d62d37b146101835780632383ff81146101ac57806335fe629b146101c85780633af55ac3146102055761017e565b3661017e57610104610410565b610143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013a90612251565b60405180910390fd5b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c333460405161017492919061210d565b60405180910390a1005b600080fd5b34801561018f57600080fd5b506101aa60048036038101906101a59190611a52565b61044d565b005b6101c660048036038101906101c191906119aa565b6106f8565b005b3480156101d457600080fd5b506101ef60048036038101906101ea9190611a8e565b6107b5565b6040516101fc91906120f2565b60405180910390f35b34801561021157600080fd5b5061021a61082e565b6040516102279190612333565b60405180910390f35b34801561023c57600080fd5b5061025760048036038101906102529190611981565b6108d9565b005b34801561026557600080fd5b50610280600480360381019061027b9190611a8e565b610a27565b005b34801561028e57600080fd5b50610297610ae1565b6040516102a49190612333565b60405180910390f35b3480156102b957600080fd5b506102c2610b42565b6040516102cf9190612333565b60405180910390f35b3480156102e457600080fd5b506102ed610ba5565b6040516102fa9190612333565b60405180910390f35b34801561030f57600080fd5b50610318610bfd565b6040516103259190612136565b60405180910390f35b34801561033a57600080fd5b50610343610c0d565b6040516103509190612136565b60405180910390f35b34801561036557600080fd5b5061036e610410565b60405161037b9190612136565b60405180910390f35b34801561039057600080fd5b506103ab60048036038101906103a691906119d3565b610c83565b005b6103c760048036038101906103c29190611a8e565b610e5b565b005b6103d1610ece565b005b3480156103df57600080fd5b506103fa60048036038101906103f59190611981565b61100b565b6040516104079190612311565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff166104316112a4565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b610455610410565b610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90612251565b60405180910390fd5b61049d826112cd565b6104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d3906122d1565b60405180910390fd5b60011515600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16151514610572576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610569906122b1565b60405180910390fd5b61057a61082e565b8111156105bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b390612231565b60405180910390fd5b60008061060d600154600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546112ea565b9150915081610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890612291565b60405180910390fd5b60008061065e8386611312565b91509150816106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990612271565b60405180910390fd5b84600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555080600181905550505050505050565b80610702816112cd565b610741576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610738906122d1565b60405180910390fd5b610749610c0d565b610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f906122f1565b60405180910390fd5b6107b1348373ffffffffffffffffffffffffffffffffffffffff1661134190919063ffffffff16565b5050565b60006107bf610410565b6107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590612251565b60405180910390fd5b6108086002611435565b821061081357600080fd5b61082782600261144a90919063ffffffff16565b9050919050565b6000610838610410565b610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90612251565b60405180910390fd5b60008061088d610885610ae1565b6001546112ea565b91509150816108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890612291565b60405180910390fd5b809250505090565b806108e3816112cd565b610922576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610919906122d1565b60405180910390fd5b61092a610410565b610969576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096090612251565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006109b991906117b0565b6001820160006109c991906117b0565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556002820160146101000a81549060ff021916905560038201600090555050610a2282600261146490919063ffffffff16565b505050565b610a2f610410565b610a6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6590612251565b60405180910390fd5b600781118015610a7f575061016d81105b610abe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab590612171565b60405180910390fd5b6201518081610acd919061243d565b42610ad891906123e7565b60058190555050565b600033610aec610410565b80610afc5750610afb816112cd565b5b610b3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3290612191565b60405180910390fd5b4791505090565b600033610b4d610410565b80610b5d5750610b5c816112cd565b5b610b9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9390612191565b60405180910390fd5b60055491505090565b6000610baf610410565b610bee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be590612251565b60405180910390fd5b610bf86002611435565b905090565b6000610c08336112cd565b905090565b600033610c18610410565b80610c285750610c27816112cd565b5b610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e90612191565b60405180910390fd5b600554421115610c7a5760019150610c7f565b600091505b5090565b610c8b610410565b610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc190612251565b60405180910390fd5b610cd3836112cd565b15610d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0a90612211565b60405180910390fd5b6040518060a001604052808381526020018281526020018473ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610daf9291906117f0565b506020820151816001019080519060200190610dcc9291906117f0565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548160ff02191690831515021790555060808201518160030155905050610e5583600261149490919063ffffffff16565b50505050565b610e63610410565b610ea2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9990612251565b60405180910390fd5b610ecb813373ffffffffffffffffffffffffffffffffffffffff1661134190919063ffffffff16565b50565b33610ed8816112cd565b610f17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0e906122d1565b60405180910390fd5b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160149054906101000a900460ff16151514610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa4906121b1565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160146101000a81548160ff02191690831515021790555050565b611013611876565b3361101c610410565b8061102c575061102b816112cd565b5b61106b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106290612191565b60405180910390fd5b611074836112cd565b6110b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110aa906122d1565b60405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461110d90612567565b80601f016020809104026020016040519081016040528092919081815260200182805461113990612567565b80156111865780601f1061115b57610100808354040283529160200191611186565b820191906000526020600020905b81548152906001019060200180831161116957829003601f168201915b5050505050815260200160018201805461119f90612567565b80601f01602080910402602001604051908101604052809291908181526020018280546111cb90612567565b80156112185780601f106111ed57610100808354040283529160200191611218565b820191906000526020600020905b8154815290600101906020018083116111fb57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900460ff16151515158152602001600382015481525050915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006112e38260026114c490919063ffffffff16565b9050919050565b60008083831115611301576000809150915061130b565b6001838503915091505b9250929050565b600080600083850190508481101561133157600080925092505061133a565b60018192509250505b9250929050565b80471015611384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137b906121f1565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516113aa906120dd565b60006040518083038185875af1925050503d80600081146113e7576040519150601f19603f3d011682016040523d82523d6000602084013e6113ec565b606091505b5050905080611430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611427906121d1565b60405180910390fd5b505050565b6000611443826000016114f4565b9050919050565b60006114598360000183611505565b60001c905092915050565b600061148c836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61159f565b905092915050565b60006114bc836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61171d565b905092915050565b60006114ec836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61178d565b905092915050565b600081600001805490509050919050565b600081836000018054905011611550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154790612151565b60405180910390fd5b82600001828154811061158c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020549050600081146117115760006001826115d19190612497565b90506000600186600001805490506115e99190612497565b90506000866000018281548110611629577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080876000018481548110611673577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055508387600101600083815260200190815260200160002081905550866000018054806116d5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050611717565b60009150505b92915050565b6000611729838361178d565b611782578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611787565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b5080546117bc90612567565b6000825580601f106117ce57506117ed565b601f0160209004906000526020600020908101906117ec91906118bd565b5b50565b8280546117fc90612567565b90600052602060002090601f01602090048101928261181e5760008555611865565b82601f1061183757805160ff1916838001178555611865565b82800160010185558215611865579182015b82811115611864578251825591602001919060010190611849565b5b50905061187291906118bd565b5090565b6040518060a001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600081525090565b5b808211156118d65760008160009055506001016118be565b5090565b60006118ed6118e88461237f565b61234e565b90508281526020810184848401111561190557600080fd5b611910848285612525565b509392505050565b60008135905061192781612637565b92915050565b60008135905061193c8161264e565b92915050565b600082601f83011261195357600080fd5b81356119638482602086016118da565b91505092915050565b60008135905061197b81612665565b92915050565b60006020828403121561199357600080fd5b60006119a184828501611918565b91505092915050565b6000602082840312156119bc57600080fd5b60006119ca8482850161192d565b91505092915050565b6000806000606084860312156119e857600080fd5b60006119f686828701611918565b935050602084013567ffffffffffffffff811115611a1357600080fd5b611a1f86828701611942565b925050604084013567ffffffffffffffff811115611a3c57600080fd5b611a4886828701611942565b9150509250925092565b60008060408385031215611a6557600080fd5b6000611a7385828601611918565b9250506020611a848582860161196c565b9150509250929050565b600060208284031215611aa057600080fd5b6000611aae8482850161196c565b91505092915050565b611ac0816124cb565b82525050565b611acf816124cb565b82525050565b611ade816124ef565b82525050565b611aed816124ef565b82525050565b6000611afe826123af565b611b0881856123c5565b9350611b18818560208601612534565b611b2181612626565b840191505092915050565b6000611b396022836123d6565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611b9f6048836123d6565b91507f657874656e73696f6e20697320736574206f6e6c7920696e206461797320746860008301527f6174206172652067726561746572207468656e203720616e64206c6f7765722060208301527f7468656e203336350000000000000000000000000000000000000000000000006040830152606082019050919050565b6000611c2b6023836123d6565b91507f61646472657373206973206e6f74206f776e6572206f722062656e656669636960008301527f61727900000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611c91601d836123d6565b91507f74686973206164647265737320616c72656164792076657269666965640000006000830152602082019050919050565b6000611cd1603a836123d6565b91507f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008301527f6563697069656e74206d617920686176652072657665727465640000000000006020830152604082019050919050565b6000611d37601d836123d6565b91507f416464726573733a20696e73756666696369656e742062616c616e63650000006000830152602082019050919050565b6000611d776022836123d6565b91507f62656e6566696369617279206164647265737320616c7265616479206578697360008301527f74210000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ddd601f836123d6565b91507f616d6f756e7420697320626967676572207468616e20617661696c61626c65006000830152602082019050919050565b6000611e1d6020836123d6565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000611e5d6027836123d6565b91507f616d6f756e74206164646974696f6e206e6f7420776f726b696e67206173206560008301527f78706563746564000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ec36000836123ba565b9150600082019050919050565b6000611edd602d836123d6565b91507f736f6d7468696e672069732077726f6e6720696e2074686520616d6f756e747360008301527f2063616c63756c6174696f6e73000000000000000000000000000000000000006020830152604082019050919050565b6000611f436024836123d6565b91507f62656e65666963696172792061646472657373206e6f7420796574207665726960008301527f66696564000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611fa9601e836123d6565b91507f62656e65666963696172792061646472657373206e6f7420666f756e642100006000830152602082019050919050565b6000611fe96025836123d6565b91507f7769746864726177206973206e6f7420616c6c6f77656420617420746865206d60008301527f6f6d656e740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600060a083016000830151848203600086015261205f8282611af3565b915050602083015184820360208601526120798282611af3565b915050604083015161208e6040860182611ab7565b5060608301516120a16060860182611ad5565b5060808301516120b460808601826120bf565b508091505092915050565b6120c88161251b565b82525050565b6120d78161251b565b82525050565b60006120e882611eb6565b9150819050919050565b60006020820190506121076000830184611ac6565b92915050565b60006040820190506121226000830185611ac6565b61212f60208301846120ce565b9392505050565b600060208201905061214b6000830184611ae4565b92915050565b6000602082019050818103600083015261216a81611b2c565b9050919050565b6000602082019050818103600083015261218a81611b92565b9050919050565b600060208201905081810360008301526121aa81611c1e565b9050919050565b600060208201905081810360008301526121ca81611c84565b9050919050565b600060208201905081810360008301526121ea81611cc4565b9050919050565b6000602082019050818103600083015261220a81611d2a565b9050919050565b6000602082019050818103600083015261222a81611d6a565b9050919050565b6000602082019050818103600083015261224a81611dd0565b9050919050565b6000602082019050818103600083015261226a81611e10565b9050919050565b6000602082019050818103600083015261228a81611e50565b9050919050565b600060208201905081810360008301526122aa81611ed0565b9050919050565b600060208201905081810360008301526122ca81611f36565b9050919050565b600060208201905081810360008301526122ea81611f9c565b9050919050565b6000602082019050818103600083015261230a81611fdc565b9050919050565b6000602082019050818103600083015261232b8184612042565b905092915050565b600060208201905061234860008301846120ce565b92915050565b6000604051905081810181811067ffffffffffffffff82111715612375576123746125f7565b5b8060405250919050565b600067ffffffffffffffff82111561239a576123996125f7565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006123f28261251b565b91506123fd8361251b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561243257612431612599565b5b828201905092915050565b60006124488261251b565b91506124538361251b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561248c5761248b612599565b5b828202905092915050565b60006124a28261251b565b91506124ad8361251b565b9250828210156124c0576124bf612599565b5b828203905092915050565b60006124d6826124fb565b9050919050565b60006124e8826124fb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015612552578082015181840152602081019050612537565b83811115612561576000848401525b50505050565b6000600282049050600182168061257f57607f821691505b60208210811415612593576125926125c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b612640816124cb565b811461264b57600080fd5b50565b612657816124dd565b811461266257600080fd5b50565b61266e8161251b565b811461267957600080fd5b5056fea26469706673582212202c532096bff229fb4060d7c8f17f44d12f74e1aa743660afd81c23c728e1545864736f6c63430008000033a2646970667358221220ee7efecc9aa3f773e026df0ab9508bbd48c0af72fc30bce1f1b39f3c103ffa5d64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1558:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:5",
                "type": ""
              }
            ],
            "src": "7:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:5",
                "type": ""
              }
            ],
            "src": "152:262:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:5",
                "type": ""
              }
            ],
            "src": "420:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "603:50:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "620:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "640:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "625:14:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "613:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "613:34:5"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "598:3:5",
                "type": ""
              }
            ],
            "src": "544:109:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "847:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "860:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "871:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "803:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "803:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "803:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "729:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "741:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "752:4:5",
                "type": ""
              }
            ],
            "src": "659:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "979:118:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "989:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1001:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1012:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "997:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "997:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "989:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1063:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1076:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1072:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1072:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1025:37:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1025:65:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1025:65:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "951:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "963:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "974:4:5",
                "type": ""
              }
            ],
            "src": "887:210:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1148:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1187:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1169:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1158:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1130:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1140:7:5",
                "type": ""
              }
            ],
            "src": "1103:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1282:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1275:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1275:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1268:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1268:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1257:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1229:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1239:7:5",
                "type": ""
              }
            ],
            "src": "1205:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1346:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1371:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1378:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1367:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1356:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1328:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1338:7:5",
                "type": ""
              }
            ],
            "src": "1301:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1476:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1533:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1542:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1535:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1535:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1535:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1499:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1524:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1506:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1506:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1486:2:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1469:5:5",
                "type": ""
              }
            ],
            "src": "1433:122:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "93:639:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:227;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:130;;;:::i;:::-;;159:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:119;420:7;445:24;:36;470:10;445:36;;;;;;;;;;;;;;;;;;;;;;;;;438:43;;369:119;:::o;503:227::-;557:4;624:1;576:50;;:24;:36;601:10;576:36;;;;;;;;;;;;;;;;;;;;;;;;;:50;;;573:91;;;648:5;641:12;;;;573:91;719:4;712:11;;503:227;;:::o;229:130::-;340:10;317:34;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;270:24;:36;295:10;270:36;;;;;;;;;;;;;;;;:82;;;;;;;;;;;;;;;;;;229:130::o;159:59::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:222::-;;790:2;779:9;775:18;767:26;;803:71;871:1;860:9;856:17;847:6;803:71;:::i;:::-;757:124;;;;:::o;887:210::-;;1012:2;1001:9;997:18;989:26;;1025:65;1087:1;1076:9;1072:17;1063:6;1025:65;:::i;:::-;979:118;;;;:::o;1103:96::-;;1169:24;1187:5;1169:24;:::i;:::-;1158:35;;1148:51;;;:::o;1205:90::-;;1282:5;1275:13;1268:21;1257:32;;1247:48;;;:::o;1301:126::-;;1378:42;1371:5;1367:54;1356:65;;1346:81;;;:::o;1433:122::-;1506:24;1524:5;1506:24;:::i;:::-;1499:5;1496:35;1486:2;;1545:1;1542;1535:12;1486:2;1476:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./BeneficiariesVault.sol\";\n\ncontract VaultFactory {\n    \n    \n    //map address to struct\n    mapping(address => address) public accountToContractMapping;\n    \n    function createNewVault() public {\n      accountToContractMapping[msg.sender] = address(new BeneficiariesVault(msg.sender));\n    }\n    \n    function getContractAddress() public view returns (address){\n        return accountToContractMapping[msg.sender];\n    }\n    \n    \n    function checkIfAcountHasVault() public view returns (bool) {\n        if(accountToContractMapping[msg.sender] == address(0)){\n            return false;\n        }\n        //msg.sender is in the mapping\n        return true;\n    }\n}",
  "sourcePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
  "ast": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        1203
      ],
      "BeneficiariesVault": [
        536
      ],
      "EnumerableSet": [
        1716
      ],
      "SafeMath": [
        907
      ],
      "VaultFactory": [
        595
      ]
    },
    "id": 596,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 596,
        "sourceUnit": 537,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          536
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 595,
        "linearizedBaseContracts": [
          595
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 543,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 595,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 542,
              "keyType": {
                "id": 540,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 541,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 546,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 549,
                      "indexExpression": {
                        "expression": {
                          "id": 547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 555,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$536_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 553,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 552,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 536,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 536,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 595,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 567,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 570,
                    "indexExpression": {
                      "expression": {
                        "id": 568,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 571,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 595,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 578,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 581,
                      "indexExpression": {
                        "expression": {
                          "id": 579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 590,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 577,
                        "id": 588,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 577,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 595,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 596,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "legacyAST": {
    "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "Address": [
        1203
      ],
      "BeneficiariesVault": [
        536
      ],
      "EnumerableSet": [
        1716
      ],
      "SafeMath": [
        907
      ],
      "VaultFactory": [
        595
      ]
    },
    "id": 596,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/yaniv/Desktop/etherum/my-eth-will/contracts/BeneficiariesVault.sol",
        "file": "./BeneficiariesVault.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 596,
        "sourceUnit": 537,
        "src": "57:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          536
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 595,
        "linearizedBaseContracts": [
          595
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "9d3b8cba",
            "id": 543,
            "mutability": "mutable",
            "name": "accountToContractMapping",
            "nodeType": "VariableDeclaration",
            "scope": 595,
            "src": "159:59:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 542,
              "keyType": {
                "id": 540,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "167:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "159:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 541,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "178:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 561,
              "nodeType": "Block",
              "src": "262:97:1",
              "statements": [
                {
                  "expression": {
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 546,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "270:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 549,
                      "indexExpression": {
                        "expression": {
                          "id": 547,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "295:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "295:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "270:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 555,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "340:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "340:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "317:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_BeneficiariesVault_$536_$",
                              "typeString": "function (address) returns (contract BeneficiariesVault)"
                            },
                            "typeName": {
                              "id": 553,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 552,
                                "name": "BeneficiariesVault",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 536,
                                "src": "321:18:1"
                              },
                              "referencedDeclaration": 536,
                              "src": "321:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                                "typeString": "contract BeneficiariesVault"
                              }
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "317:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                            "typeString": "contract BeneficiariesVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BeneficiariesVault_$536",
                            "typeString": "contract BeneficiariesVault"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "309:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "309:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "270:82:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "270:82:1"
                }
              ]
            },
            "functionSelector": "8b2d1dbe",
            "id": 562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "252:2:1"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 595,
            "src": "229:130:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "428:60:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 567,
                      "name": "accountToContractMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "445:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 570,
                    "indexExpression": {
                      "expression": {
                        "id": 568,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "470:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "470:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "445:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 566,
                  "id": 571,
                  "nodeType": "Return",
                  "src": "438:43:1"
                }
              ]
            },
            "functionSelector": "32a2c5d0",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:1"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 565,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 573,
                  "src": "420:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:9:1"
            },
            "scope": 595,
            "src": "369:119:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "563:167:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 578,
                        "name": "accountToContractMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 543,
                        "src": "576:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 581,
                      "indexExpression": {
                        "expression": {
                          "id": 579,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "601:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "576:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "624:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "616:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "616:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "576:50:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 590,
                  "nodeType": "IfStatement",
                  "src": "573:91:1",
                  "trueBody": {
                    "id": 589,
                    "nodeType": "Block",
                    "src": "627:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "648:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 577,
                        "id": 588,
                        "nodeType": "Return",
                        "src": "641:12:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "719:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 577,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "712:11:1"
                }
              ]
            },
            "functionSelector": "889352c2",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfAcountHasVault",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:2:1"
            },
            "returnParameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "557:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:6:1"
            },
            "scope": 595,
            "src": "503:227:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 596,
        "src": "93:639:1"
      }
    ],
    "src": "32:700:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x3113C943274cfCc4216d40e475aF28592e3c29Ff",
      "transactionHash": "0x2ebb81c7a0fe391aae1668e38616b9f32dba9d38fda23561848077a6c4273ff9"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-29T23:07:43.709Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}